From 162ec570fb0d84bb8895946b3841c8098d289cf4 Mon Sep 17 00:00:00 2001
From: Marko Lindqvist <cazfi74@gmail.com>
Date: Thu, 1 Sep 2022 04:50:17 +0300
Subject: [PATCH 42/43] Add inline advance_count() wrapper proving that it
 returns <= A_LAST

Compiler was not happy with what it consider potential
bigger than A_LAST return value from advance_count()

See osdn #45541

Signed-off-by: Marko Lindqvist <cazfi74@gmail.com>
---
 common/tech.c |  2 +-
 common/tech.h | 16 +++++++++++++++-
 2 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/common/tech.c b/common/tech.c
index 52062404b9..9f1a8b7c7b 100644
--- a/common/tech.c
+++ b/common/tech.c
@@ -75,7 +75,7 @@ const struct advance *advance_array_last(void)
 /**********************************************************************//**
   Return the number of advances/technologies.
 **************************************************************************/
-Tech_type_id advance_count(void)
+Tech_type_id advance_count_real(void)
 {
   return game.control.num_tech_types;
 }
diff --git a/common/tech.h b/common/tech.h
index 912220922d..2e59475fcf 100644
--- a/common/tech.h
+++ b/common/tech.h
@@ -158,7 +158,21 @@ struct advance {
 BV_DEFINE(bv_techs, A_LAST);
 
 /* General advance/technology accessor functions. */
-Tech_type_id advance_count(void);
+Tech_type_id advance_count_real(void);
+
+/**********************************************************************//**
+  Inline wrapper for advance_count_real() that makes it clear to
+  the compiler that the value returned never exceeds A_LAST.
+  Making actual advance_count_real() inline would be more
+  complicated due to header interdependencies.
+**************************************************************************/
+static inline Tech_type_id advance_count(void)
+{
+  Tech_type_id rc = advance_count_real();
+
+  return MIN(rc, A_LAST);
+}
+
 Tech_type_id advance_index(const struct advance *padvance);
 Tech_type_id advance_number(const struct advance *padvance);
 
-- 
2.35.1

